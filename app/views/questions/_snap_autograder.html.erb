<% content_for :head do %>
  <!-- NOTE: jQuery and _ are included in the Rails App  -->

  <!-- AG Snap Modifications -->
  <script src="/snap-path.js"></script>
  <script src="/autograder/ag-files/snap-ui-overrides.js"></script>

  <!-- Autograder custom display -->
  <link rel="stylesheet" type="text/css" href="/autograder/ag-files/AG_status_bar.css" />
  <link rel="stylesheet" type="text/css" href="/autograder/ag-files/hintstyle.css" />

  <!-- Main autograder components -->
  <script src='/autograder/ag-files/ag-util.js'></script>
  <script src='/autograder/ag-files/spriteEventLog.js'></script>
  <script src='/autograder/ag-files/scriptAnalysis.js'></script>
  <script src="/autograder/ag-files/AGAgent.js"></script>
  <script src='/autograder/ag-files/feedbackLog.js'></script>
  <script src="/autograder/ag-files/AGFormatting.js"></script>

  <!-- Custom cloud access on localhost only. -->
  <% if Rails.env == 'development' %>
  <script src="/autograder/ag-files/snap-local-cloud.js"></script>
  <% end %>

  <!-- Load snap + AG additions, similar to snap.html -->
  <script>
  function RESET_WORLD_SIZE() {
    // The canvas size needs to manually be set so that morphic
    // knows the exact pixel dimensions to handle.
    $('#world').attr('height', $(window).height() - $('#ag-header').height());
    $('#world').attr('width', $('#snap').width());
    if (world) {
      world.drawNew();
    }
  }
  // THIS SEEMS LIKE A HACK.
  // but this site is not edX....
  isEDX = false;
  var world, world_canvas;
  window.onload = function () {
    RESET_WORLD_SIZE();
    $(window).resize(RESET_WORLD_SIZE);
    var ide, grade_button;
    world_canvas = document.getElementById('world')
    world = new WorldMorph(world_canvas, false); // do not autosize
    ide = new IDE_Morph();
    ide.openIn(world);
    // Start Snap Environment Loop
    loop();

    // AUTOGRADER ADDITIONS:
    // Set Snap! to small stage mode
    ide.toggleStageSize(true);
    // Initialize AGSB button.
    grade_button = document.getElementById("autograding_button");
    grade_button.addEventListener('click', button_listener);
    world_canvas.addEventListener("mouseup", update_listener);
    // This is a link relative to /problems/N/
    starter_path = gon.starter_file_path;
    initializeSnapAdditions(world, ide);
  };

  function loop() {
    requestAnimationFrame(loop);
    world.doOneCycle();
  }

  </script>
<% end %>


<!-- Autograding Menu Help Button -->
<!-- <div class="overlay is-hidden" id="overlay">
  <p class="help-text" id="full-screen-arrow">&#8600;</p>
  <p class="help-text" id="full-screen-help">This full-screen button will pop out the Snap! window.</p>
  <p class="help-text" id="menu-item-arrow">&#8599;</p>
  <p class="help-text" id="menu-item-help">The first two menu items will revert your current Snap! state to one of your previous attempts, depending on whether you wish to revert to your last graded attempt or to your best attempt.</br></br>The 'Reset' button will revert to a blank Snap! project, or to a provided starter file if one is given for this problem.</p>
  <p class="help-text" id="ag-button-arrow">&#8593;</p>
  <p class="help-text" id="ag-button-help">Clicking this button will grade your current attempt and send the results to edX.</p>
</div>

<div style="display:inline-block" class="view-results"
  id="circle" onclick="openResults();">Results
</div>

<div class="overlay is-hidden" id="ag-output">
  <div class="popup-content" id="ag-results">
    <span class="button-close" onclick="closeResults();" id="popup">X</span>
    <div id="toggle-correct-tests"></div>
    <p id="comment"></p>
  </div>
</div> -->

